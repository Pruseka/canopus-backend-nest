// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(cuid())
  email               String                @unique
  name                String?
  password            String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  refreshToken        String?
  accessLevel         UserAccessLevel       @default(USER)
  autoCredit          Boolean               @default(false)
  dataCredit          BigInt                @default(0)
  displayName         String?
  pending             Pending               @default(REGISTERED)
  portalConnectedAt   DateTime?
  timeCredit          BigInt                @default(0)
  UserHistorySnapshot UserHistorySnapshot[]
}

model UserHistorySnapshot {
  id                String          @id @default(cuid())
  userId            String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  snapshotDate      DateTime        @default(now())
  accessLevel       UserAccessLevel @default(USER)
  autoCredit        Boolean         @default(false)
  dataCredit        BigInt          @default(0)
  name              String?
  displayName       String?
  pending           Pending         @default(REGISTERED)
  portalConnectedAt DateTime?
  timeCredit        BigInt          @default(0)
  user              User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([userId, snapshotDate])
}

enum UserAccessLevel {
  ADMIN
  SITE_ADMIN
  SITE_MASTER
  USER
  PREPAID_USER
}

enum Pending {
  PENDING
  ERROR
  REGISTERED
}
