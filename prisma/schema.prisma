// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(cuid())
  email               String                @unique
  name                String?
  password            String
  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  refreshToken        String?
  accessLevel         UserAccessLevel       @default(USER)
  autoCredit          Boolean               @default(false)
  dataCredit          BigInt                @default(0)
  displayName         String?
  status              Status                @default(REGISTERED)
  portalConnectedAt   DateTime?
  timeCredit          BigInt                @default(0)
  UserHistorySnapshot UserHistorySnapshot[]
}

model UserHistorySnapshot {
  id                String          @id @default(cuid())
  userId            String
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
  snapshotDate      DateTime        @default(now())
  accessLevel       UserAccessLevel @default(USER)
  autoCredit        Boolean         @default(false)
  dataCredit        BigInt          @default(0)
  name              String?
  displayName       String?
  status            Status          @default(REGISTERED)
  portalConnectedAt DateTime?
  timeCredit        BigInt          @default(0)
  user              User            @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@unique([userId, snapshotDate])
}

model Wan {
  id                     String           @id @default(cuid())
  createdAt              DateTime         @default(now())
  updatedAt              DateTime         @updatedAt
  wanName                String
  wanStatus              WanStatus
  prepaidUsageMode       PrepaidUsageMode @default(ALLOW)
  dhcp                   DhcpStatus       @default(ENABLED)
  dns1                   String?
  dns2                   String?
  interfaceId            String?
  ipAddress              String?
  ipGateway              String?
  prepaidUsageMaxVolume  BigInt?
  prepaidUsagePeriodType UsagePeriodType?
  subnetmask             String?
  switchPriority         Int?
  usageBlocked           BigInt           @default(0)
  usageInBytes           BigInt           @default(0)
  usageLimitStatus       UsageLimitStatus @default(NO_LIMIT)
  maxUsageInBytes        BigInt?
  usagePeriodInDays      Int?
  usagePeriodType        UsagePeriodType?
  usageStart             DateTime?
}

enum UserAccessLevel {
  ADMIN
  SITE_ADMIN
  SITE_MASTER
  USER
  PREPAID_USER
}

enum Status {
  PENDING
  ERROR
  REGISTERED
}

enum WanStatus {
  READY
  ERROR
  SUSPENDED
  INITIALIZING
  ALL_WAN_FORCED_OFF
  NOT_READY
  QUOTA_REACHED
  ONLINE
}

enum PrepaidUsageMode {
  DISALLOW
  ALLOW
  LIMITED
}

enum DhcpStatus {
  ENABLED
  DISABLED
}

enum UsagePeriodType {
  DAILY
  WEEKLY
  MONTHLY
}

enum UsageLimitStatus {
  NO_LIMIT
  LIMIT_ENFORCED
  LIMIT_DISABLED
}
